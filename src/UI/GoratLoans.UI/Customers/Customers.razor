@page "/Customers"
@using Microsoft.AspNetCore.Components
@using GoratLoans.UI.Customers.Components

<h3>Register new customer</h3>

<EditForm Model="@RegisterCustomerModel" OnSubmit=@FormSubmitted>

    <DataAnnotationsValidator/>
    <div>@RegisterCustomerResponse</div>
    <div class="form-group">
        <label for="FirstName">First name:</label>
        <InputText class="form-control" @bind-Value="RegisterCustomerModel.FirstName" id="FirstName"/>
        <ValidationMessage For="() => RegisterCustomerModel.FirstName"/>
    </div>
    <div class="form-group">
        <label>Last name:</label>
        <input type="text" class="form-control mb-4" @bind="RegisterCustomerModel.LastName" placeholder="Enter last name" id="LastName">
        <ValidationMessage For="() => RegisterCustomerModel.LastName"/>
    </div>
    <div class="form-group">
        <label>Birth date:</label>
        <InputDate @bind-Value="RegisterCustomerModel.BirthDate" class="form-control mb-2" id="BirthDate"/>
        <ValidationMessage For="() => RegisterCustomerModel.BirthDate"/>
    </div>
    <div class="form-group">
        <label>Address:</label>
        <input type="text" class="form-control mb-2" @bind="RegisterCustomerModel.Address" placeholder="Enter address" id="Address">
        <ValidationMessage For="() => RegisterCustomerModel.Address"/>
    </div>
    
    <button type="submit" class="btn btn-primary">Create</button>
    
    <div class="row">
        <div class="col">
            <CustomersTable Customers="CustomerList" />
        </div>
    </div>

</EditForm>

@code {
    
    private RegisterCustomer RegisterCustomerModel = new()
    {
        BirthDate = new DateOnly(DateTime.Now.Year - 18, DateTime.Now.Month, DateTime.Now.Day)
    };

    private string RegisterCustomerResponse = string.Empty;

    public List<CustomerViewModel> CustomerList { get; set; } = new();

    [Inject]
    public ICustomerService CustomerService { get; set; }

    protected async override Task OnInitializedAsync()
    {
        CustomerList = await CustomerService.GetCustomersAsync();
    }

    private async Task FormSubmitted(EditContext editContext)
    {
        if (editContext.Validate())
        {
            var response = await CustomerService.RegisterCustomerAsync(RegisterCustomerModel);
            if (response == "ok")
            {
                RegisterCustomerResponse = "Customer registered!";
                CustomerList = await CustomerService.GetCustomersAsync();
            }
        }
    }

}